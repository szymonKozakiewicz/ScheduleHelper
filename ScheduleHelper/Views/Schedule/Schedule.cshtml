@using ScheduleHelper.Core.DTO;
@using ScheduleHelper.Core.Domain.Entities.Enums;
@model List<TimeSlotInScheduleDTO>

<div class="mt-5">


    
    <div class="col-7 d-flex flex-column justify-content-between ">
        <div>
            <h1 class="mainTitle">Schedule</h1>
            <p class="secondaryTitle mb-5">View all setps in schedule</p>
        </div>

    </div>




    <div class="d-flex justify-content-start w-100">
        <a class=" btn btn-primary generateScheduleBtn mb-2" href=@RouteConstants.GenerateScheduleSettings>Generate new schedule</a>
    </div>
    
    <table class="table">
        <thead>
            <tr>
                <th class="col colBlue">Task name</th>
                <th class="col colBlue">Start</th>
                <th class="col colBlue">End</th>
                <th class="col colBlue"></th>


            </tr>
        </thead>
        <tbody>
            @foreach (var slot in Model)
            {

                String statusClass = "finished";
                if (slot.Status == TimeSlotStatus.Canceled)
                    statusClass = "canceled";
                if (slot.Status == TimeSlotStatus.Active)
                    statusClass = "active";
                if (slot.Status == TimeSlotStatus.Finished)
                    statusClass = "finished";
                <tr>
                    <td class=@statusClass>@slot.Name</td>
                    <td class=@statusClass>@slot.StartTime</td>
                    <td class=@statusClass>@slot.FinishTime</td>
                    @if (slot.Status == TimeSlotStatus.Active)
                    {
                        <td class="text-center">
                            <a class="btnSecondary btn slotStatus finishButton" href="@RouteConstants.FinishTimeSlot?slotId=@slot.Id&finishTime=@slot.FinishTime">Finish</a>
                        </td>
                    }else
                    {
                        @if (slot.Status == TimeSlotStatus.Canceled)
                        {
                            <td class="d-flex justify-content-center">
                                <div class="d-flex justify-content-center slotStatus">
                                    <i class="bi bi-x-lg canceledIcon"></i>
                                </div>
                            </td>
                        }
                        else
                        {

                            <td class="d-flex justify-content-center">
                                <div class="d-flex justify-content-center slotStatus">
                                        <i class="bi bi-check-lg finishedIcon"></i>
                                    </div>
                                </td>
                           

                        }

                }

                </tr>
            }
        </tbody>
    </table>

    <h2 class="mt-5 mb-3 text-center">Statistics</h2>
    <div class="d-flex justify-content-center mb-4">
        <div class="  chart-container">
            <canvas id="myChart" width="250" height="250"></canvas>
        </div>
    </div>
 


</div>



<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    var data = {
        labels: ['Canceled', 'Finished', 'Active'],
        datasets: [{
            data: [@ViewBag.ShareOfCanceledSlots, @ViewBag.ShareOfFinishedSlots, @ViewBag.ShareOfActiveSlots],
            backgroundColor: ['#ff6384', '#36a2eb', '#ffce56']
        }]
    };


    var ctx = document.getElementById('myChart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'pie',
        data: data,
        options: {

        }
    });
</script>

@section css
{
    <link rel="stylesheet" href="css/ChartStyles.css">
    <link rel="stylesheet" href="css/SlotsStyles.css">
    <link rel="stylesheet" href="css/SheduleListStyles.css">
}