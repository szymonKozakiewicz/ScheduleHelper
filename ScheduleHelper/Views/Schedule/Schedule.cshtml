@using ScheduleHelper.Core.DTO;
@using ScheduleHelper.Core.Domain.Entities.Enums;
@model List<TimeSlotInScheduleDTO>
<h1>Schedule</h1>

<table>
    <thead>
        <tr>
            <th>Task name</th>
            <th>Start</th>
            <th>Finish</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var slot in Model)
        {
            
            String statusClass = "finished";
            if(slot.Status==TimeSlotStatus.Canceled)
                statusClass = "canceled";
            if (slot.Status == TimeSlotStatus.Active)
                statusClass = "active";
            if(slot.Status == TimeSlotStatus.Finished)
                statusClass = "finished";
            <tr>
                <td class=@statusClass>@slot.Name</td>
                <td class=@statusClass>@slot.StartTime</td>
                <td class=@statusClass>@slot.FinishTime</td>
                @if (slot.Status == TimeSlotStatus.Active){
                         <td><a href="@RouteConstants.FinishTimeSlot?slotId=@slot.Id&finishTime=@slot.FinishTime">finish</a></td>
                }
                
            </tr>
        }
    </tbody>
</table>
@if (ViewBag.tasksNotInSchedule.Count != 0)
{
    <h2>Tasks not set in schedule:</h2>
    <table>
        <thead>
            <tr>
                <th>Task name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var slot in ViewBag.tasksNotInSchedule)
            {

                <tr>
                    <td>@slot.Name</td>

                </tr>
            }
        </tbody>
    </table>
}

<a href=@RouteConstants.ShowTasksList>Edit tasks list</a>
<a href=@RouteConstants.GenerateScheduleSettings>Generate schedule</a>